# Generated by Django 4.2.7 on 2025-09-06 09:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('alerts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('malware', 'Malware'), ('phishing', 'Phishing'), ('ddos', 'DDoS'), ('data_breach', 'Fuite de données'), ('insider_threat', 'Menace interne'), ('vulnerability', 'Vulnérabilité'), ('policy_violation', 'Violation de politique'), ('other', 'Autre')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], max_length=20)),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('assigned', 'Assigné'), ('in_progress', 'En cours'), ('on_hold', 'En attente'), ('resolved', 'Résolu'), ('closed', 'Fermé')], default='new', max_length=20)),
                ('impact_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('business_impact', models.TextField(blank=True)),
                ('affected_systems', models.JSONField(blank=True, default=list)),
                ('affected_users', models.PositiveIntegerField(default=0)),
                ('detected_at', models.DateTimeField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_summary', models.TextField(blank=True)),
                ('root_cause', models.TextField(blank=True)),
                ('lessons_learned', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='accounts.client')),
                ('related_alerts', models.ManyToManyField(blank=True, related_name='incidents', to='alerts.alert')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incidents',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='IncidentTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('created', 'Créé'), ('assigned', 'Assigné'), ('status_changed', 'Statut modifié'), ('comment_added', 'Commentaire ajouté'), ('attachment_added', 'Pièce jointe ajoutée'), ('resolved', 'Résolu'), ('closed', 'Fermé')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='incidents.incident')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Événement de timeline',
                'verbose_name_plural': 'Événements de timeline',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IncidentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='incidents.incident')),
            ],
            options={
                'verbose_name': "Commentaire d'incident",
                'verbose_name_plural': "Commentaires d'incidents",
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='IncidentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='incident_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='incidents.incident')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Pièce jointe d'incident",
                'verbose_name_plural': "Pièces jointes d'incidents",
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='EscalationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority_levels', models.JSONField(blank=True, default=list)),
                ('categories', models.JSONField(blank=True, default=list)),
                ('min_impact_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('time_threshold_hours', models.PositiveIntegerField(default=24)),
                ('notify_managers', models.BooleanField(default=False)),
                ('auto_assign', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalation_rules', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_escalation_rules', to=settings.AUTH_USER_MODEL)),
                ('escalate_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalation_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Règle d'escalade",
                'verbose_name_plural': "Règles d'escalade",
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['client', 'status'], name='incidents_i_client__fd031e_idx'),
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['client', 'priority'], name='incidents_i_client__8a5a55_idx'),
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['client', 'category'], name='incidents_i_client__811f0a_idx'),
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['reported_at'], name='incidents_i_reporte_fa94a0_idx'),
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['impact_score'], name='incidents_i_impact__b75d00_idx'),
        ),
    ]

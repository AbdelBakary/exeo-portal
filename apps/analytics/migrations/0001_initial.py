# Generated by Django 4.2.7 on 2025-09-06 09:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('security_summary', 'Résumé de sécurité'), ('incident_report', "Rapport d'incident"), ('threat_analysis', 'Analyse de menaces'), ('compliance', 'Conformité'), ('executive', 'Exécutif'), ('technical', 'Technique'), ('custom', 'Personnalisé')], max_length=50)),
                ('template_config', models.JSONField(blank=True, default=dict)),
                ('data_sources', models.JSONField(blank=True, default=list)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('output_format', models.CharField(default='pdf', max_length=20)),
                ('schedule', models.CharField(blank=True, max_length=100)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modèle de rapport',
                'verbose_name_plural': 'Modèles de rapport',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('generating', 'Génération en cours'), ('completed', 'Terminé'), ('failed', 'Échoué')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_format', models.CharField(default='pdf', max_length=20)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('data_range_start', models.DateTimeField(blank=True, null=True)),
                ('data_range_end', models.DateTimeField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='accounts.client')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='analytics.reporttemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapport généré',
                'verbose_name_plural': 'Rapports générés',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('chart', 'Graphique'), ('table', 'Tableau'), ('metric', 'Métrique'), ('alert', 'Alerte'), ('map', 'Carte'), ('timeline', 'Timeline')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Ligne'), ('bar', 'Barres'), ('pie', 'Camembert'), ('doughnut', 'Donut'), ('area', 'Aire'), ('scatter', 'Dispersion')], max_length=20)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('data_source', models.CharField(max_length=100)),
                ('refresh_interval', models.PositiveIntegerField(default=300)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=4)),
                ('height', models.PositiveIntegerField(default=3)),
                ('is_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Widget de tableau de bord',
                'verbose_name_plural': 'Widgets de tableau de bord',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='RiskScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_type', models.CharField(choices=[('alert', 'Alerte'), ('incident', 'Incident'), ('client', 'Client'), ('asset', 'Asset'), ('overall', 'Global')], max_length=20)),
                ('entity_id', models.CharField(max_length=100)),
                ('entity_type', models.CharField(max_length=50)),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('confidence', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('factors', models.JSONField(blank=True, default=dict)),
                ('methodology', models.CharField(default='ml_model_v1', max_length=100)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('calculated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calculated_risk_scores', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_scores', to='accounts.client')),
            ],
            options={
                'verbose_name': 'Score de risque',
                'verbose_name_plural': 'Scores de risque',
                'ordering': ['-calculated_at'],
                'indexes': [models.Index(fields=['client', 'score_type'], name='analytics_r_client__e50431_idx'), models.Index(fields=['entity_id', 'entity_type'], name='analytics_r_entity__078c70_idx'), models.Index(fields=['calculated_at'], name='analytics_r_calcula_5a959d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('metric_type', models.CharField(choices=[('count', 'Compteur'), ('sum', 'Somme'), ('average', 'Moyenne'), ('percentage', 'Pourcentage'), ('rate', 'Taux'), ('trend', 'Tendance')], max_length=20)),
                ('value', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('dimensions', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('calculation_method', models.CharField(default='direct', max_length=100)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='accounts.client')),
            ],
            options={
                'verbose_name': 'Métrique',
                'verbose_name_plural': 'Métriques',
                'ordering': ['-calculated_at'],
                'indexes': [models.Index(fields=['client', 'name'], name='analytics_m_client__a03a98_idx'), models.Index(fields=['period_start', 'period_end'], name='analytics_m_period__c58fd5_idx'), models.Index(fields=['calculated_at'], name='analytics_m_calcula_c0510b_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('page_view', 'Vue de page'), ('widget_interaction', 'Interaction avec widget'), ('filter_applied', 'Filtre appliqué'), ('export_performed', 'Export effectué'), ('search_performed', 'Recherche effectuée'), ('alert_clicked', 'Alerte cliquée'), ('incident_clicked', 'Incident cliqué'), ('report_generated', 'Rapport généré')], max_length=50)),
                ('page_url', models.URLField(blank=True)),
                ('component', models.CharField(blank=True, max_length=100)),
                ('action', models.CharField(blank=True, max_length=100)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to='accounts.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Événement analytique',
                'verbose_name_plural': 'Événements analytiques',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['client', 'event_type'], name='analytics_a_client__42f584_idx'), models.Index(fields=['user', 'created_at'], name='analytics_a_user_id_ecb128_idx'), models.Index(fields=['created_at'], name='analytics_a_created_546677_idx')],
            },
        ),
    ]

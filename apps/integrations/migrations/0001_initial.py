# Generated by Django 5.2.6 on 2025-09-08 07:37

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_alter_usersession_session_key'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertMappingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('system_type', models.CharField(choices=[('splunk', 'Splunk'), ('qradar', 'QRadar'), ('arcsight', 'ArcSight'), ('fortinet', 'Fortinet'), ('paloalto', 'Palo Alto'), ('cisco', 'Cisco'), ('crowdstrike', 'CrowdStrike'), ('sentinelone', 'SentinelOne'), ('microsoft_defender', 'Microsoft Defender'), ('aws_guardduty', 'AWS GuardDuty'), ('azure_security', 'Azure Security Center'), ('gcp_security', 'GCP Security Command Center')], max_length=50)),
                ('mapping_config', models.JSONField(help_text='Configuration de mapping par défaut')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClientIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('integration_type', models.CharField(choices=[('webhook', 'Webhook'), ('siem', 'SIEM'), ('firewall', 'Firewall'), ('edr', 'EDR/XDR'), ('cloud', 'Cloud Security'), ('api', 'API REST'), ('syslog', 'Syslog')], max_length=50)),
                ('name', models.CharField(help_text="Nom de l'intégration", max_length=100)),
                ('endpoint_url', models.URLField(blank=True, help_text='URL du système client', null=True)),
                ('api_token', models.CharField(blank=True, help_text="Token d'authentification", max_length=255, null=True)),
                ('mapping_config', models.JSONField(default=dict, help_text='Configuration de mapping des champs')),
                ('is_active', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('inactive', 'Inactive'), ('active', 'Active'), ('error', 'Error'), ('testing', 'Testing')], default='inactive', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alerts_received_24h', models.IntegerField(default=0)),
                ('last_alert_received', models.DateTimeField(blank=True, null=True)),
                ('error_count_24h', models.IntegerField(default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='accounts.client')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('client', 'name')},
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_type', models.CharField(choices=[('alert_received', 'Alert Received'), ('alert_processed', 'Alert Processed'), ('error', 'Error'), ('connection_test', 'Connection Test'), ('sync_started', 'Sync Started'), ('sync_completed', 'Sync Completed')], max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.clientintegration')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]

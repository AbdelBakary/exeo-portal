# Generated by Django 4.2.7 on 2025-09-07 07:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_alter_usersession_session_key'),
        ('incidents', '0001_initial'),
        ('alerts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('support', 'Support technique'), ('incident', 'Incident de sécurité'), ('feature_request', 'Demande de fonctionnalité'), ('account', 'Gestion de compte'), ('billing', 'Facturation'), ('training', 'Formation'), ('consultation', 'Consultation'), ('other', 'Autre')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Ouvert'), ('in_progress', 'En cours'), ('waiting_client', 'En attente client'), ('waiting_soc', 'En attente SOC'), ('resolved', 'Résolu'), ('closed', 'Fermé'), ('cancelled', 'Annulé')], default='open', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('sla_deadline', models.DateTimeField(blank=True, null=True)),
                ('first_response_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_time_hours', models.FloatField(blank=True, null=True)),
                ('client_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('client_feedback', models.TextField(blank=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tickets', to=settings.AUTH_USER_MODEL)),
                ('related_alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='alerts.alert')),
                ('related_incident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='incidents.incident')),
            ],
            options={
                'verbose_name': 'Ticket client',
                'verbose_name_plural': 'Tickets clients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('created', 'Créé'), ('assigned', 'Assigné'), ('status_changed', 'Statut modifié'), ('priority_changed', 'Priorité modifiée'), ('comment_added', 'Commentaire ajouté'), ('attachment_added', 'Pièce jointe ajoutée'), ('resolved', 'Résolu'), ('closed', 'Fermé'), ('reopened', 'Rouvert'), ('escalated', 'Escaladé')], max_length=30)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='tickets.clientticket')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Événement de timeline',
                'verbose_name_plural': 'Événements de timeline',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('template_type', models.CharField(choices=[('incident', 'Incident de sécurité'), ('support', 'Support technique'), ('feature_request', 'Demande de fonctionnalité'), ('training', 'Formation'), ('consultation', 'Consultation')], max_length=50)),
                ('title_template', models.CharField(max_length=200)),
                ('description_template', models.TextField()),
                ('category', models.CharField(choices=[('support', 'Support technique'), ('incident', 'Incident de sécurité'), ('feature_request', 'Demande de fonctionnalité'), ('account', 'Gestion de compte'), ('billing', 'Facturation'), ('training', 'Formation'), ('consultation', 'Consultation'), ('other', 'Autre')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_templates', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_ticket_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modèle de ticket',
                'verbose_name_plural': 'Modèles de tickets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TicketSLA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('categories', models.JSONField(blank=True, default=list)),
                ('priorities', models.JSONField(blank=True, default=list)),
                ('first_response_time', models.PositiveIntegerField(default=4)),
                ('resolution_time', models.PositiveIntegerField(default=24)),
                ('escalation_time', models.PositiveIntegerField(default=48)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_slas', to='accounts.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_ticket_slas', to=settings.AUTH_USER_MODEL)),
                ('escalate_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='escalated_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SLA de ticket',
                'verbose_name_plural': 'SLAs de tickets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('comment_type', models.CharField(choices=[('client', 'Client'), ('soc', 'SOC'), ('system', 'Système')], default='client', max_length=20)),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tickets.clientticket')),
            ],
            options={
                'verbose_name': 'Commentaire de ticket',
                'verbose_name_plural': 'Commentaires de tickets',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='ticket_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tickets.clientticket')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pièce jointe de ticket',
                'verbose_name_plural': 'Pièces jointes de tickets',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['client', 'status'], name='tickets_cli_client__e01bf9_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['client', 'priority'], name='tickets_cli_client__e9d1a6_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['client', 'category'], name='tickets_cli_client__bf26a1_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['created_by'], name='tickets_cli_created_551b97_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['assigned_to'], name='tickets_cli_assigne_a0ccba_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['created_at'], name='tickets_cli_created_f1e2fd_idx'),
        ),
        migrations.AddIndex(
            model_name='clientticket',
            index=models.Index(fields=['ticket_id'], name='tickets_cli_ticket__7d17c1_idx'),
        ),
    ]
